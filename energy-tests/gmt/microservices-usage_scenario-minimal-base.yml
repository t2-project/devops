---
name: T2-Microservices (Minimal Scenario with JMeter)
author: David Kopp
description: One user checks out the inventory, adds one random product to cart and finally confirms the order. In this base scenario, there is no think time in between. Pause after execution to wait for the async operation.

compose-file: !include microservices-compose.yml

services:
  orchestrator:
    log-stdout: true
    read-notes-stdout: true
    read-sci-stdout: true
    environment:
      T2_GMT_LOGGING_ENABLED: true # SCI note get logged by orchestrator after Saga completed
  postgres-orchestrator:
    setup-commands:
      - sleep 5 # wait some time to ensure that postgres is ready
  postgres-inventory:
    setup-commands:
      - sleep 5 # wait some time to ensure that postgres is ready
  kafka:
    setup-commands:
      - sleep 10 # wait some time to ensure that kafka is ready
  uibackend:
    setup-commands:
      - sleep 60 # wait some time to ensure that all T2 services are ready before starting the flow

sci:
  R_d: order
  # One order consists of three sequential requests: get inventory, add product to cart, confirm order

flow:
  - name: single user orders one product
    container: jmeter
    commands:
      - type: console
        command: jmeter -Jhostname=uibackend -Jport=8080 -JnumExecutions=1 -JnumUser=1 -JrampUp=0 -JnumProducts=1 -JthinkTimeMin=0 -JthinkTimeAdditionalRange=0 -JpauseAfterExecution=0 -JloggingEnabled=true -JloggingSCIEnabled=false -n -t /tmp/repo/t2-project-flexible.jmx
        log-stdout: true
        read-notes-stdout: true
        read-sci-stdout: false
