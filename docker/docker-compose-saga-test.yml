version: "2"
services:

  mongo-cart:
    image: bitnami/mongodb:7.0
    ports:
      - "27017:27017"

  mongo-order:
    image: bitnami/mongodb:7.0
    ports:
      - "27018:27017"

  cart:
    image: t2project/cart:main
    ports:
      - "8080:8080"
    depends_on:
      - mongo-cart
    environment:
      MONGO_HOST: mongo-cart
      T2_CART_TTL: "0"
      T2_CART_TASKRATE: "0"
      T2_JAEGER_ENABLED: "FALSE"
      T2_JAEGER_HOST: localhost

  uibackend:
    image: t2project/uibackend:main
    ports:
      - "8081:8080"
    depends_on:
      - cart
      - inventory
      - e2etest
    environment:
      T2_ORCHESTRATOR_URL: http://e2etest:8080/test
      T2_CART_URL: http://cart:8080/cart
      T2_INVENTORY_URL: http://inventory:8080/inventory
      T2_RESERVATION_ENDPOINT: reservation
      T2_JAEGER_ENABLED: "FALSE"
      T2_JAEGER_HOST: localhost

  ui:
    image: t2project/ui:main
    ports:
      - "8086:8080"
    environment:
      T2_UIBACKEND_URL: http://uibackend:8080
      T2_JAEGER_ENABLED: "FALSE"
      T2_JAEGER_HOST: localhost

  inventory:
    image: t2project/inventory:main
    ports:
      - "8082:8080"
    depends_on:
      - cdcservice
      - postgres-inventory
      - kafka
      - zookeeper
    environment:
      EVENTUATELOCAL_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      EVENTUATELOCAL_ZOOKEEPER_CONNECTION_STRING: zookeeper:2181
      T2_INVENTORY_SIZE: "25"
      T2_INVENTORY_TASKRATE: "0"
      T2_INVENTORY_TTL: "0"
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      SPRING_DATASOURCE_PASSWORD: inventory
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-inventory/inventory
      SPRING_DATASOURCE_USERNAME: inventory
      SPRING_PROFILES_ACTIVE: saga
      T2_JAEGER_ENABLED: "FALSE"
      T2_JAEGER_HOST: localhost

  order:
    image: t2project/order:main
    ports:
      - "8083:8080"
    depends_on:
      - mongo-order
      - cdcservice
      - postgres-orchestrator
      - kafka
      - zookeeper
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-orchestrator/eventuate
      SPRING_DATASOURCE_USERNAME: eventuate
      SPRING_DATASOURCE_PASSWORD: eventuate
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      EVENTUATELOCAL_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      EVENTUATELOCAL_ZOOKEEPER_CONNECTION_STRING: zookeeper:2181
      MONGO_HOST: mongo-order
      T2_JAEGER_ENABLED: "FALSE"
      T2_JAEGER_HOST: localhost

  payment:
    image: t2project/payment:main
    ports:
      - "8084:8080"
    depends_on:
      - cdcservice
      - postgres-orchestrator
      - kafka
      - zookeeper
    environment:
      T2_PAYMENT_PROVIDER_ENABLED: "TRUE"
      T2_PAYMENT_PROVIDER_DUMMY_URL: http://e2etest:8080/fakepay
      T2_PAYMENT_PROVIDER_TIMEOUT: 5
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-orchestrator/eventuate
      SPRING_DATASOURCE_USERNAME: eventuate
      SPRING_DATASOURCE_PASSWORD: eventuate
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      EVENTUATELOCAL_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      EVENTUATELOCAL_ZOOKEEPER_CONNECTION_STRING: zookeeper:2181
      T2_JAEGER_ENABLED: "FALSE"
      T2_JAEGER_HOST: localhost

  orchestrator:
    image: t2project/orchestrator:main
    ports:
      - "8085:8080"
    depends_on:
      - cdcservice
      - postgres-orchestrator
      - kafka
      - zookeeper
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-orchestrator/eventuate
      SPRING_DATASOURCE_USERNAME: eventuate
      SPRING_DATASOURCE_PASSWORD: eventuate
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      EVENTUATELOCAL_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      EVENTUATELOCAL_ZOOKEEPER_CONNECTION_STRING: zookeeper:2181
      T2_JAEGER_ENABLED: "FALSE"
      T2_JAEGER_HOST: localhost

  zookeeper:
    image: eventuateio/eventuate-zookeeper:0.18.0.RELEASE
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      KAFKA_HEAP_OPTS: -Xmx64m

  kafka:
    image: eventuateio/eventuate-kafka:0.18.0.RELEASE
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_LISTENERS: LC://kafka:29092,LX://kafka:9092
      KAFKA_ADVERTISED_LISTENERS: LC://kafka:29092,LX://${DOCKER_HOST_IP:-localhost}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LC:PLAINTEXT,LX:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LC
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_HEAP_OPTS: -Xmx192m

  postgres-orchestrator:
    image: eventuateio/eventuate-tram-sagas-postgres:0.23.0.RELEASE
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: eventuate
      POSTGRES_PASSWORD: eventuate
      USE_DB_ID: "true"

  postgres-inventory:
    image: eventuateio/eventuate-tram-sagas-postgres:0.23.0.RELEASE
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: inventory
      POSTGRES_PASSWORD: inventory
      USE_DB_ID: "true"

  cdcservice:
    image: eventuateio/eventuate-cdc-service:0.16.0.RELEASE
    ports:
      - "8099:8080"
    depends_on:
      - postgres-orchestrator
      - postgres-inventory
      - kafka
      - zookeeper
    environment:
      JAVA_OPTS: -Xmx64m
      
      EVENTUATELOCAL_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      EVENTUATELOCAL_ZOOKEEPER_CONNECTION_STRING: zookeeper:2181

      EVENTUATE_CDC_READER_READER1_TYPE: postgres-wal
      EVENTUATE_CDC_READER_READER1_DATASOURCEURL: jdbc:postgresql://postgres-orchestrator/eventuate
      EVENTUATE_CDC_READER_READER1_DATASOURCEUSERNAME: eventuate
      EVENTUATE_CDC_READER_READER1_DATASOURCEPASSWORD: eventuate
      EVENTUATE_CDC_READER_READER1_DATASOURCEDRIVERCLASSNAME: org.postgresql.Driver
      EVENTUATE_CDC_READER_READER1_LEADERSHIPLOCKPATH: /eventuate/cdc/leader/orchestrator
      EVENTUATE_CDC_READER_READER1_OUTBOXID: 1
      EVENTUATE_CDC_READER_READER1_POSTGRESWALINTERVALINMILLISECONDS: 10 # default: 10
      EVENTUATE_CDC_READER_READER1_POSTGRESREPLICATIONSTATUSINTERVALINMILLISECONDS: 1000 # default: 1000

      EVENTUATE_CDC_READER_READER2_TYPE: postgres-wal
      EVENTUATE_CDC_READER_READER2_DATASOURCEURL: jdbc:postgresql://postgres-inventory/inventory
      EVENTUATE_CDC_READER_READER2_DATASOURCEUSERNAME: inventory
      EVENTUATE_CDC_READER_READER2_DATASOURCEPASSWORD: inventory
      EVENTUATE_CDC_READER_READER2_DATASOURCEDRIVERCLASSNAME: org.postgresql.Driver
      EVENTUATE_CDC_READER_READER2_LEADERSHIPLOCKPATH: /eventuate/cdc/leader/inventory_service
      EVENTUATE_CDC_READER_READER2_OUTBOXID: 2
      EVENTUATE_CDC_READER_READER2_POSTGRESWALINTERVALINMILLISECONDS: 10 # default: 10
      EVENTUATE_CDC_READER_READER2_POSTGRESREPLICATIONSTATUSINTERVALINMILLISECONDS: 1000 # default: 1000

  e2etest:
    image: t2project/e2etest:main
    ports:
      - "8088:8080"
    depends_on:
      - mongo
      - postgres-orchestrator
      - kafka
      - zookeeper
      - orchestrator
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-orchestrator/eventuate
      SPRING_DATASOURCE_USERNAME: eventuate
      SPRING_DATASOURCE_PASSWORD: eventuate
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      EVENTUATELOCAL_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      EVENTUATELOCAL_ZOOKEEPER_CONNECTION_STRING: zookeeper:2181
      SPRING_DATA_MONGODB_URI: mongodb://mongo:27017/data
      T2_ORCHESTRATOR_URL: http://orchestrator:8080/order
      T2_JAEGER_ENABLED: "FALSE"
      T2_JAEGER_HOST: localhost
