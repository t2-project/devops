apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: inventory
    app.kubernetes.io/instance: inventory
    app.kubernetes.io/component: backend
    app.kubernetes.io/version: "1.3"
    app.kubernetes.io/part-of: t2project
  name: inventory
spec:
  selector:
    app.kubernetes.io/instance: inventory
    app.kubernetes.io/part-of: t2project
  ports:
  - port: 80
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: inventory
    app.kubernetes.io/instance: inventory
    app.kubernetes.io/component: backend
    app.kubernetes.io/version: "1.3"
    app.kubernetes.io/part-of: t2project
  name: inventory
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: inventory
      app.kubernetes.io/part-of: t2project
  template:
    metadata:
      labels:
        app.kubernetes.io/name: inventory
        app.kubernetes.io/instance: inventory
        app.kubernetes.io/component: backend
        app.kubernetes.io/version: "1.3"
        app.kubernetes.io/part-of: t2project
    spec:
      containers:
        - name: inventory
          imagePullPolicy: Always
          env:
            - name: EVENTUATELOCAL_KAFKA_BOOTSTRAP_SERVERS
              value: kafka:9092
            - name: EVENTUATELOCAL_ZOOKEEPER_CONNECTION_STRING
              value: kafka-zookeeper:2181
            - name: T2_INVENTORY_SIZE
              value: "25"
            - name: T2_INVENTORY_TASKRATE
              value: "0"
            - name: T2_INVENTORY_TTL
              value: "0"
            - name: SPRING_DATASOURCE_DRIVER_CLASS_NAME
              value: org.postgresql.Driver
            - name: SPRING_DATASOURCE_PASSWORD
              value: inventory
            - name: SPRING_DATASOURCE_URL
              value: jdbc:postgresql://postgres-inventory/inventory
            - name: SPRING_DATASOURCE_USERNAME
              value: inventory
            - name: SPRING_PROFILES_ACTIVE
              value: saga
            - name: T2_JAEGER_ENABLED
              value: "FALSE"
            - name: T2_JAEGER_HOST
              value: simplest-agent #todo
          image: t2project/inventory:main
          ports:
            - containerPort: 8080
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests:
              cpu: 250m
              memory: 250Mi
      restartPolicy: Always
