apiVersion: v1
kind: Service
metadata:
  labels:
    app: e2etest
  name: e2etest
spec:
  ports:
    - port: 80
      targetPort: 8080
  selector:
    app: e2etest
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: e2etest
  name: e2etest
spec:
  replicas: 1
  selector:
    matchLabels:
      app: e2etest
  template:
    metadata:
      labels:
        app: e2etest
    spec:
      containers:
        - name: e2etest
          image: t2project/e2etest:main
          ports:
            - containerPort: 8080
          imagePullPolicy: Always
          env:
            - name: SPRING_DATASOURCE_SAGA_URL
              value: jdbc:postgresql://postgres-orchestrator/eventuate
            - name: SPRING_DATASOURCE_SAGA_USERNAME
              value: eventuate
            - name: SPRING_DATASOURCE_SAGA_PASSWORD
              value: eventuate
            - name: SPRING_DATASOURCE_SAGA_DRIVER_CLASS_NAME
              value: org.postgresql.Driver
            - name: SPRING_DATASOURCE_INVENTORY_URL
              value: jdbc:postgresql://postgres-inventory/inventory
            - name: SPRING_DATASOURCE_INVENTORY_USERNAME
              value: inventory
            - name: SPRING_DATASOURCE_INVENTORY_PASSWORD
              value: inventory
            - name: SPRING_DATASOURCE_INVENTORY_DRIVER_CLASS_NAME
              value: org.postgresql.Driver
            - name: EVENTUATELOCAL_KAFKA_BOOTSTRAP_SERVERS
              value: kafka:9092
            - name: EVENTUATELOCAL_ZOOKEEPER_CONNECTION_STRING
              value: kafka-zookeeper:2181
            - name: MONGO_HOST # Order MongoDB
              value: mongo-order-mongodb
            - name: T2_ORCHESTRATOR_URL
              value: http://orchestrator-cs/order
            - name: T2_JAEGER_ENABLED
              value: "FALSE"
            - name: T2_JAEGER_HOST
              value: simplest-agent #todo
      restartPolicy: Always
